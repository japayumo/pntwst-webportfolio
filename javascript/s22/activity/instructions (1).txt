Activity:

Member 1:
1. In the s22 folder, create an activity folder.
- Create an index.html file to attach our index.js file
- Copy the template from boodle notes and paste it in an index.js file.
- Update your local sessions git repository and push to git with the commit message of Add template code s22.
- Console log the message Hello World to ensure that the script file is properly associated with the html file.
2. Create a function called login which is able to receive 3 parameters called username,password and role.
- add an if statement to check if the username is an empty string or undefined or if the password is an empty string or undefined or if the role is an empty string or undefined.
- if it is, return the following to inform the user that their input should not be empty:
- "Inputs must not be empty"
Member 2:
3. Add an else statement to the if statement in the login function. Inside the else statement add a switch to check the user's role add 3 cases and a default:
- if the user's role is admin, return the following message:
- "Welcome back to the class portal, admin!"
- if the user's role is teacher, return the following message:
- "Thank you for logging in, teacher!"
- if the user's role is a rookie, return the following message:
- "Welcome to the class portal, student!"
- if the user's role does not fall under any of the cases, as a default, return a message:
-  "Role out of range."
Member 3:
4. Create a function called checkAverage which is able to receive 4 numbers as arguments calculate its average and log a message for  the user about their letter equivalent in the console.
- add parameters appropriate to describe the arguments.
- create a new function scoped variable called average.
- calculate the average of the 4 number inputs and store it in the variable average.
- research the use of Math.round() and round off the value of the average variable.
- update the average variable with the use of Math.round()
- 	console.log() the average variable to check if it is rounding off first.

Member 4:
5. Add an if statement in the checkAverage function to check if the value of avg is less than or equal to 74.
- if it is, return the following message:
- "Hello, student, your average is <show average>. The letter equivalent is F"
6. Add an else if statement to check if the value of avg is greater than or equal to 75 and if average is less than or equal to 79.
- if it is, return the following message:
- "Hello, student, your average is <show average>. The letter equivalent is D"
7. Add an else if statement to check if the value of avg is greater than or equal to 80 and if average is less than or equal to 84.
- if it is, return the following message:
- "Hello, student, your average is <show average>. The letter equivalent is C"
Member 5:
8. Continue to add an else if statement in the checkAverage function to check if the value of avg is greater than or equal to 85 and if average is less than or equal to 89.
- if it is, return the following message:
- "Hello, student, your average is <show average>. The letter equivalent is B"
9. Add an else if statement to check if the value of avg is greater than or equal to 90 and if average is less than or equal to 95.
- if it is, return the following message:
- "Hello, student, your average is <show average>. The letter equivalent is A"
10. Add an else if statement to check if the value of average is greater than 96.
- if it is, return the following message:
 - "Hello, student, your average is <show average>. The letter equivalent is A+"

